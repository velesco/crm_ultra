<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        // Only create table if it doesn't exist
        if (!Schema::hasTable('email_campaign_segments')) {
            Schema::create('email_campaign_segments', function (Blueprint $table) {
                $table->id();
                $table->foreignId('email_campaign_id')->constrained('email_campaigns')->onDelete('cascade');
                $table->foreignId('contact_segment_id')->constrained('contact_segments')->onDelete('cascade');
                $table->timestamps();
                
                // Prevent duplicate entries
                $table->unique(['email_campaign_id', 'contact_segment_id']);
            });
        } else {
            // Table exists, just ensure it has the correct structure
            Schema::table('email_campaign_segments', function (Blueprint $table) {
                // Check if unique constraint exists, if not add it
                $indexes = Schema::getConnection()->getSchemaBuilder()->getIndexes('email_campaign_segments');
                $hasUniqueIndex = collect($indexes)->contains(function ($index) {
                    return $index['unique'] && 
                           count($index['columns']) === 2 && 
                           in_array('email_campaign_id', $index['columns']) && 
                           in_array('contact_segment_id', $index['columns']);
                });
                
                if (!$hasUniqueIndex) {
                    $table->unique(['email_campaign_id', 'contact_segment_id']);
                }
            });
        }
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('email_campaign_segments');
    }
};
